apiVersion: argoproj.io/v1alpha1
kind: Workflow
metadata:
  generateName: dl-sentinel2-country-
spec:
  serviceAccountName: workflow
  entrypoint: main
  arguments:
    parameters:
      - name: countries
        value: '["BE", "BG", "AT", "CY", "CZ", "DE", "DK", "EE", "EL", "ES", "FI", "FR", "HR", "HU", "IE", "IT", "LU", "LV", "MT", "NL", "PL", "PT", "RO", "SE", "SI", "SK", "LT"]'
  templates:
    # Entrypoint DAG template
    - name: main
      dag:
        tasks:
          - name: run-dl
            template: run-dl-task
            arguments:
              parameters:
                - name: country
                  value: "{{item}}"
            withParam: "{{workflow.parameters.countries}}"

    # Worker template
    - name: run-dl-task
      inputs:
        parameters:
          - name: country
      container:
        image: inseefrlab/satellite-images-dev:v0.0.6
        imagePullPolicy: IfNotPresent
        command: ["/bin/bash", "-c"]
        args: [
           "#!/bin/sh &&
           set -e &&
           echo '{' > /tmp/GCP_credentials.json &&
           echo '  \"type\": \"'$GCP_TYPE'\",' >> /tmp/GCP_credentials.json &&
           echo '  \"project_id\": \"'$GCP_PROJECT_ID'\",' >> /tmp/GCP_credentials.json &&
           echo '  \"private_key_id\": \"'$GCP_PRIVATE_KEY_ID'\",' >> /tmp/GCP_credentials.json &&
           echo '  \"private_key\": \"'$GCP_PRIVATE_KEY'\",' >> /tmp/GCP_credentials.json &&
           echo '  \"client_email\": \"'$GCP_CLIENT_EMAIL'\",' >> /tmp/GCP_credentials.json &&
           echo '  \"client_id\": \"'$GCP_CLIENT_ID'\",' >> /tmp/GCP_credentials.json &&
           echo '  \"auth_uri\": \"'$GCP_AUTH_URI'\",' >> /tmp/GCP_credentials.json &&
           echo '  \"token_uri\": \"'$GCP_TOKEN_URI'\",' >> /tmp/GCP_credentials.json &&
           echo '  \"auth_provider_x509_cert_url\": \"'$GCP_AUTH_PROVIDER'\",' >> /tmp/GCP_credentials.json &&
           echo '  \"client_x509_cert_url\": \"'$GCP_CLIENT_CERT'\"' >> /tmp/GCP_credentials.json &&
           echo '}' >> /tmp/GCP_credentials.json &&
           echo 'GCP credentials JSON saved at /tmp/GCP_credentials.json' &&
           git clone https://github.com/InseeFrLab/download_sentinel.git &&
           cd download_sentinel/ &&
           cp /tmp/GCP_credentials.json . &&
           export MC_HOST_s3=https://$AWS_ACCESS_KEY_ID:$AWS_SECRET_ACCESS_KEY@$AWS_S3_ENDPOINT &&
           mc cp s3/projet-hackathon-ntts-2025/CNTR_RG_10M_2024_4326.shp.zip data/ &&
           unzip data/CNTR_RG_10M_2024_4326.shp.zip -d data/ &&
           rm data/CNTR_RG_10M_2024_4326.shp.zip &&
           conda install -c conda-forge gdal=3.9.3 -y &&
           pip install -r requirements.txt &&
           python main.py --country {{inputs.parameters.country}}"
        ]
        env:
          - name: GCP_AUTH_PROVIDER
            value: https://www.googleapis.com/oauth2/v1/certs
          - name: GCP_AUTH_URI
            value: https://accounts.google.com/o/oauth2/auth
          - name: GCP_CLIENT_CERT
            value: https://www.googleapis.com/robot/v1/metadata/x509/slums-detection-sa%40ee-insee-sentinel.iam.gserviceaccount.com
          - name: GCP_CLIENT_EMAIL
            value: slums-detection-sa@ee-insee-sentinel.iam.gserviceaccount.com
          - name: GCP_PROJECT_ID
            value: ee-insee-sentinel
          - name: GCP_TOKEN_URI
            value: https://oauth2.googleapis.com/token
          - name: GCP_TYPE
            value: service_account
          - name: GCP_PRIVATE_KEY
            valueFrom:
              secretKeyRef:
                name: gcp
                key: gcpPrivateKey
          - name: GCP_PRIVATE_KEY_ID
            valueFrom:
              secretKeyRef:
                name: gcp
                key: gcpPrivateKeyId
          - name: GCP_CLIENT_ID
            valueFrom:
              secretKeyRef:
                name: gcp
                key: gcpClientId
          - name: AWS_ACCESS_KEY_ID
            valueFrom:
              secretKeyRef:
                name: mc-s3
                key: accessKey
          - name: AWS_SECRET_ACCESS_KEY
            valueFrom:
              secretKeyRef:
                name: mc-s3
                key: secretKey
          - name: AWS_DEFAULT_REGION
            value: us-east-1
          - name: AWS_S3_ENDPOINT
            value: minio.lab.sspcloud.fr
